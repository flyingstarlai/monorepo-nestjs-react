/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo/table'
import { Route as DashboardSettingsRouteImport } from './routes/_dashboard/settings'
import { Route as DashboardProfileRouteImport } from './routes/_dashboard/profile'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as DashboardAdminRouteImport } from './routes/_dashboard/admin'
import { Route as DashboardSettingsIndexRouteImport } from './routes/_dashboard/settings/index'
import { Route as DashboardSettingsSecurityRouteImport } from './routes/_dashboard/settings/security'
import { Route as DashboardSettingsProfileRouteImport } from './routes/_dashboard/settings/profile'
import { Route as DashboardSettingsBillingRouteImport } from './routes/_dashboard/settings/billing'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminRoute = DashboardAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSettingsRoute,
} as any)
const DashboardSettingsSecurityRoute =
  DashboardSettingsSecurityRouteImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => DashboardSettingsRoute,
  } as any)
const DashboardSettingsProfileRoute =
  DashboardSettingsProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => DashboardSettingsRoute,
  } as any)
const DashboardSettingsBillingRoute =
  DashboardSettingsBillingRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => DashboardSettingsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof DashboardAdminRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/settings': typeof DashboardSettingsRouteWithChildren
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/settings/billing': typeof DashboardSettingsBillingRoute
  '/settings/profile': typeof DashboardSettingsProfileRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/settings/': typeof DashboardSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof DashboardAdminRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/profile': typeof DashboardProfileRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/settings/billing': typeof DashboardSettingsBillingRoute
  '/settings/profile': typeof DashboardSettingsProfileRoute
  '/settings/security': typeof DashboardSettingsSecurityRoute
  '/settings': typeof DashboardSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/_dashboard/admin': typeof DashboardAdminRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/profile': typeof DashboardProfileRoute
  '/_dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_dashboard/settings/billing': typeof DashboardSettingsBillingRoute
  '/_dashboard/settings/profile': typeof DashboardSettingsProfileRoute
  '/_dashboard/settings/security': typeof DashboardSettingsSecurityRoute
  '/_dashboard/settings/': typeof DashboardSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/admin'
    | '/dashboard'
    | '/profile'
    | '/settings'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/settings/billing'
    | '/settings/profile'
    | '/settings/security'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/admin'
    | '/dashboard'
    | '/profile'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/settings/billing'
    | '/settings/profile'
    | '/settings/security'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/login'
    | '/_dashboard/admin'
    | '/_dashboard/dashboard'
    | '/_dashboard/profile'
    | '/_dashboard/settings'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/_dashboard/settings/billing'
    | '/_dashboard/settings/profile'
    | '/_dashboard/settings/security'
    | '/_dashboard/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin': {
      id: '/_dashboard/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardAdminRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/settings/': {
      id: '/_dashboard/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardSettingsRoute
    }
    '/_dashboard/settings/security': {
      id: '/_dashboard/settings/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof DashboardSettingsSecurityRouteImport
      parentRoute: typeof DashboardSettingsRoute
    }
    '/_dashboard/settings/profile': {
      id: '/_dashboard/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof DashboardSettingsProfileRouteImport
      parentRoute: typeof DashboardSettingsRoute
    }
    '/_dashboard/settings/billing': {
      id: '/_dashboard/settings/billing'
      path: '/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof DashboardSettingsBillingRouteImport
      parentRoute: typeof DashboardSettingsRoute
    }
  }
}

interface DashboardSettingsRouteChildren {
  DashboardSettingsBillingRoute: typeof DashboardSettingsBillingRoute
  DashboardSettingsProfileRoute: typeof DashboardSettingsProfileRoute
  DashboardSettingsSecurityRoute: typeof DashboardSettingsSecurityRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardSettingsRouteChildren: DashboardSettingsRouteChildren = {
  DashboardSettingsBillingRoute: DashboardSettingsBillingRoute,
  DashboardSettingsProfileRoute: DashboardSettingsProfileRoute,
  DashboardSettingsSecurityRoute: DashboardSettingsSecurityRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardSettingsRouteWithChildren =
  DashboardSettingsRoute._addFileChildren(DashboardSettingsRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardSettingsRoute: typeof DashboardSettingsRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardSettingsRoute: DashboardSettingsRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
