version: '3.8'

services:
  # API Service (Production)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: runner  # Use optimized production stage
    container_name: dashboard-api-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_TYPE=mssql
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}

    networks:
      - dashboard-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Web Service (Production)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner  # Use optimized production stage
    container_name: dashboard-web-prod
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=${API_BASE_URL:-http://localhost:3000}
    depends_on:
      - api
    networks:
      - dashboard-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M



  # Redis (Production)
  redis:
    image: redis:7-alpine
    container_name: dashboard-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dashboard-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: dashboard-nginx-prod
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - web
    networks:
      - dashboard-network
    restart: unless-stopped
    profiles:
      - nginx  # Only start with --profile nginx

volumes:
  redis_data:
    driver: local

networks:
  dashboard-network:
    driver: bridge
